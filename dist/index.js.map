{"version":3,"file":"index.js","names":["max","align","methods","colorMethods","extend","configs","target","forEach","method","config","reduce","t","c","Set","Array","isArray","length","validateQuery","query","_query","contain","cover","flip","resize","rotate","scale","scaleToFit","color","special","Map","merge","SchemaUtils","validate","options","value","key","set","resourceQuery","resource","useMethods","items","match","map","matchs","includes","push","replace","jimp","AUTO","RESIZE_NEAREST_NEIGHBOR","RESIZE_BILINEAR","RESIZE_BICUBIC","RESIZE_HERMITE","RESIZE_BEZIER","e","v","split","HORIZONTAL_ALIGN_LEFT","HORIZONTAL_ALIGN_CENTER","HORIZONTAL_ALIGN_RIGHT","VERTICAL_ALIGN_TOP","VERTICAL_ALIGN_MIDDLE","VERTICAL_ALIGN_BOTTOM","a","Object","assign","test","parseFloat","colorValue","colorValueItem","apply","params","moduleQuery","urlQuery","globalQuery","specialQuery","RegExp","indexOf","raw","content","meta","callback","async","image","create","args","exec","maxValue","maxType","actualValue","Math","min","mime","getMIME","data","getBufferAsync","err"],"sources":["../src/index.js"],"sourcesContent":["import SchemaUtils from 'schema-utils'\nimport jimp from 'jimp'\n\nimport options from './options.json'\n\nconst max = /^m(w|h)(\\d+)$/\nconst align = /(\\,?(left|center|right|top|middle|bottom))+/\nconst methods = ['resize', 'contain', 'cover', 'flip', 'rotate', 'scale', 'scaleToFit', 'color']\nconst colorMethods = ['lighten', 'brighten', 'darken', 'desaturate', 'saturate', 'greyscale', 'spin', 'hue', 'mix', 'tint', 'shade', 'xor', 'red', 'green', 'blue']\n\nfunction extend(...configs) {\n  const target = {};\n  [...methods, 'special', 'merge', 'methods'].forEach(method => {\n    const config = configs.reduce((t, c) => {\n      if (t == null) {\n        return c[method]\n      } else if (method === 'methods') {\n        return [...new Set([...t, ...c[method]])]\n      } else if (Array.isArray(t)) {\n        return t.length || !Array.isArray(c[method]) ? t : c[method]\n      } else if (typeof t !== 'undefined') {\n        return t\n      }\n    }, null)\n    if (config != null) target[method] = config\n  })\n  return target\n}\n\nfunction validateQuery(query) {\n  const _query = extend(query, {\n    contain: [],\n    cover: [],\n    flip: [],\n    resize: [],\n    rotate: [],\n    scale: [],\n    scaleToFit: [],\n    color: [],\n    special: new Map(),\n    merge: true,\n    methods\n  })\n\n  SchemaUtils.validate(options, _query)\n\n  _query.special.forEach((value, key) => {\n    _query.special.set(key, validateQuery(value))\n  })\n\n  return _query\n}\n\nfunction resourceQuery(resource) {\n  const useMethods = []\n  const items = resource.match(/[?&]\\w+\\=[^&]+/g)?.map(value => {\n    const matchs = value.match(/(\\w+)\\=([^&]+)/)\n    if (methods.includes(matchs[1])) useMethods.push(matchs[1])\n    return {\n      [matchs[1]]: matchs[2]\n        .replace('auto', jimp.AUTO)\n\n        .replace('nearest', jimp.RESIZE_NEAREST_NEIGHBOR)\n        .replace('bilinear', jimp.RESIZE_BILINEAR)\n        .replace('bicubic', jimp.RESIZE_BICUBIC)\n        .replace('hermite', jimp.RESIZE_HERMITE)\n        .replace('bezier', jimp.RESIZE_BEZIER)\n\n        .replace(align, e => {\n          const v = e.split(',').map(v => {\n            switch (v) {\n              case 'left':\n                return jimp.HORIZONTAL_ALIGN_LEFT\n              case 'center':\n                return jimp.HORIZONTAL_ALIGN_CENTER\n              case 'right':\n                return jimp.HORIZONTAL_ALIGN_RIGHT\n              case 'top':\n                return jimp.VERTICAL_ALIGN_TOP\n              case 'middle':\n                return jimp.VERTICAL_ALIGN_MIDDLE\n              case 'bottom':\n                return jimp.VERTICAL_ALIGN_BOTTOM\n              default:\n                return null\n            }\n          }).reduce((t, a) => {\n            if (t == null) {\n              return a\n            } else if (a == null) {\n              return t\n            } else {\n              return t | a\n            }\n          }, null)\n          return v == null ? '' : `,${v}`\n        })\n    }\n  }) || []\n  const query = items.reduce((target, value) => Object.assign(target, value), {})\n\n  for (const key in query) {\n    let value = query[key]\n\n    if (/true|false/.test(value)) {\n      value = value === 'true'\n    } else {\n      value = value.split(',').map(v => {\n        if (/^\\-?\\d+$/.test(v)) {\n          return parseFloat(v)\n        } else if (/true|false/.test(v)) {\n          return v === 'true'\n        } else {\n          return v\n        }\n      })\n\n      const colorValue = []\n      let colorValueItem = null\n      value.forEach(v => {\n        if (colorMethods.includes(v)) {\n          colorValueItem && colorValue.push(colorValueItem)\n\n          colorValueItem = {\n            apply: v,\n            params: []\n          }\n        } else if (colorValueItem) {\n          colorValueItem.params.push(v)\n        }\n      })\n      colorValueItem && colorValue.push(colorValueItem)\n      if (colorValue.length) value = colorValue\n    }\n\n    query[key] = value\n  }\n\n  query.methods = [...new Set([...(query.methods || []), ...useMethods])]\n\n  return query\n}\n\nfunction moduleQuery(query, resource) {\n  const urlQuery = validateQuery(resourceQuery(resource))\n  if (!urlQuery.merge) return urlQuery\n\n  const globalQuery = validateQuery(query)\n  let specialQuery = validateQuery({})\n  globalQuery.special.forEach((value, key) => {\n    if (\n      (key instanceof RegExp && key.test(resource)) ||\n      (typeof key === 'string' && ~resource.indexOf(key))\n    ) {\n      if (value.merge) {\n        specialQuery = extend(value, specialQuery)\n      } else {\n        specialQuery = value\n      }\n    }\n  })\n  if (!specialQuery.merge) return extend(urlQuery, specialQuery)\n\n  return extend(urlQuery, specialQuery, globalQuery)\n}\n\nexport const raw = true\n\nexport default async function (content, map, meta) {\n  const callback = this.async()\n  try {\n    const query = moduleQuery(this.query, this.resource)\n    const image = await jimp.create(content)\n\n    query.methods.forEach(method => {\n      if (!methods.includes(method)) return\n      if (!query[method].length) return\n\n      const args = query[method].map(v => {\n        if (max.test(v)) {\n          const match = max.exec(v)\n          const maxValue = parseFloat(match[2])\n          const maxType = match[1] === 'w' ? 'Width' : (match[1] === 'h' ? 'Height' : '')\n          if (!maxType) return maxValue\n          const actualValue = image[`get${maxType}`]()\n          return Math.min(maxValue, actualValue)\n        } else {\n          return v\n        }\n      })\n\n      if (method === 'color') {\n        image[method](args)\n      } else {\n        image[method](...args)\n      }\n    })\n\n    const mime = image.getMIME()\n    const data = await image.getBufferAsync(mime)\n    callback(null, data, map, meta)\n  } catch (err) {\n    callback(err, '', map, meta)\n  }\n}\n"],"mappings":"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"}